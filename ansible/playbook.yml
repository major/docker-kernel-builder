---

- hosts: all
  gather_facts: yes
  vars:
    bare_clone_dir: no
    kernel_buildtype_default: "targz-pkg"
    kernel_config_default: "https://src.fedoraproject.org/cgit/rpms/kernel.git/plain/kernel-x86_64.config"
    kernel_makeopts_default: "INSTALL_MOD_STRIP=1 kernelrelease -j{{ ansible_processor_vcpus }}"
    kernel_ref_default: "master"
    kernel_repo_default: "git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git"
    kernel_repo_depth_default: 1
    workdir_default: /opt/linux-next/
  tasks:

    - name: Check for environment variables that override the defaults
      set_fact:
        bare_clone_dir: "{{ ansible_env.BARE_CLONE_DIR | default(bare_clone_dir) }}"
        kernel_buildtype: "{{ ansible_env.KERNEL_BUILDTYPE | default(kernel_buildtype_default) }}"
        kernel_config: "{{ ansible_env.KERNEL_CONFIG | default(kernel_config_default) }}"
        kernel_makeopts: "{{ ansible_env.KERNEL_MAKEOPTS | default(kernel_makeopts_default) }}"
        kernel_ref: "{{ ansible_env.KERNEL_REF | default(kernel_ref_default) }}"
        kernel_repo: "{{ ansible_env.KERNEL_REPO | default(kernel_repo_default) }}"
        kernel_repo_depth: "{{ ansible_env.KERNEL_REPO_DEPTH | default(kernel_repo_depth_default) }}"
        workdir: "{{ ansible_env.WORKDIR | default(workdir_default) }}"
        patchwork_patches: "{{ ansible_env.PATCHWORK_URLS | default('') }}"

    - name: Make temporary directory to hold patches from patchwork
      tempfile:
        state: directory
        suffix: skt
      register: tempdir

    - name: Warn user if there were no patches provided
      debug:
        msg: |
          No patchwork patches were provided.
          Building the kernel anyway.
      when:
        - patchwork_patches | length < 1

    - name: Retrieve patchwork patches
      get_url:
        url: "{{ item }}/mbox/"
        dest: "{{ tempdir.path }}/{{ item.split('/')[-3] }}.patch"
      with_items: "{{ patchwork_patches.split(',') }}"
      register: patchwork_get
      retries: 5
      until: patchwork_get is success

    - name: Clone a bare repository if necessary
      git:
        repo: "{{ kernel_repo }}"
        dest: "{{ bare_clone_dir }}"
        depth: 1
      when:
        - bare_clone_dir | bool

    - name: Clone the git repository and checkout the correct ref
      git:
        repo: "{{ (bare_clone_dir | bool) | ternary(bare_clone_dir, kernel_repo) }}"
        dest: "{{ workdir }}"
        version: "{{ kernel_ref }}"
        depth: "{{ kernel_repo_depth }}"

    - name: Set temporary git username and email address
      command: "{{ item }}"
      args:
        chdir: "{{ workdir }}"
      with_items:
        - "git config user.name 'Kernel Builder'"
        - "git config user.email 'kernelbuilder@example.com'"

    - name: Apply patchwork patches
      shell: "git am {{ tempdir.path }}/{{ item.split('/')[-3] }}.patch"
      args:
        chdir: "{{ workdir }}"
      with_items: "{{ patchwork_patches.split(',') }}"

    - name: Copy kernel config into place
      get_url:
        url: "{{ kernel_config }}"
        dest: "{{ workdir }}/.config"

    - name: Ensure kernel tree is clean
      shell: "make mrproper"
      args:
        chdir: "{{ workdir }}"

    - name: Ensure config has any new defaults added
      shell: "make olddefconfig"
      args:
        chdir: "{{ workdir }}"

    - name: Disable debug build
      shell: "scripts/config --disable DEBUG_INFO"
      args:
        chdir: "{{ workdir }}"

    - name: Compile and package the kernel
      shell: "make {{ kernel_makeopts }} {{ kernel_buildtype }}"
      args:
        chdir: "{{ workdir }}"
      async: 3600
      poll: 0
      register: kernel_build_async

    - name: Wait for kernel to finish building
      async_status:
        jid: "{{ kernel_build_async.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 60
      delay: 60

    - name: Search output for the output filename
      debug:
        msg: "{{ item | regex_replace('^.* successfully created in ./(.*)', '\\1') }}"
      with_items:
        - "{{ job_result.stdout_lines | select('search', 'successfully created') | list }}"
